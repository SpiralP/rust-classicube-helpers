searchState.loadedDescShard("async_dispatcher", 0, "Used to call futures from another thread, getting their …\nCreated by calling <code>Dispatcher::get_handle</code>.\nCreated by calling <code>Dispatcher::get_handle_local</code>.\nEnqueue a future to be ran when <code>Dispatcher::run</code> is called.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a <code>DispatcherHandle</code> to control this Dispatcher from …\nGet a <code>LocalDispatcherHandle</code> to control this Dispatcher …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRun all tasks in the pool to completion.\nRuns all tasks in the pool and returns if no more progress …\nEnqueue a future to be ran when <code>Dispatcher::run</code> is called.\nEnqueue a future to be ran when <code>Dispatcher::run</code> is called.\nRuns all tasks and returns after completing one future or …")