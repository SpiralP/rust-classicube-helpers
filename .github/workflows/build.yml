name: Rust

on: [push]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read # for checkout

jobs:
  linux_nix:
    uses: SpiralP/github-reusable-workflows/.github/workflows/build.yml@47c2d7401fd3edc8e58588c556eb481f5df739bd # main

  windows:
    runs-on: windows-latest
    permissions:
      contents: write # for publishing docs

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install deps
        run: |
          iwr -useb get.scoop.sh -outfile install-scoop.ps1
          .\install-scoop.ps1 -RunAsAdmin
          rm install-scoop.ps1
          echo "$HOME\scoop\shims" >> $env:GITHUB_PATH
          echo "C:\ProgramData\scoop\shims" >> $env:GITHUB_PATH
          scoop install aria2
          scoop install llvm
          echo "LIBCLANG_PATH=$HOME\scoop\apps\llvm\current\bin" >> $env:GITHUB_ENV

      - name: Install rust stable
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
        with:
          toolchain: stable
          override: true

      - name: setup-msbuild
        uses: microsoft/setup-msbuild@ede762b26a2de8d110bb5a3db4d7e0e080c0e917 # v1.3

      - name: Build
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1
        with:
          command: build

      - name: Build docs
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1
        if: github.ref == 'refs/heads/main'
        with:
          command: doc
          args: --all-features

      - name: Deploy docs
        uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e # v4
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/doc
          force_orphan: true

      - name: Test
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1
        with:
          command: test
          args: --features ci -- --nocapture

  linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install deps
        run: |
          sudo apt-get -y update
          sudo apt-get -y install clang llvm
          sudo apt-get -y install mesa-common-dev libopenal-dev libcurl4-openssl-dev libgl1-mesa-dev

      - name: Install rust stable
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
        with:
          toolchain: stable
          override: true

      - name: Build
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1
        with:
          command: build

      - name: Test
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1
        with:
          command: test
          args: --features ci -- --nocapture

  mac:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install deps
        run: |
          brew install llvm
          echo "/usr/local/opt/llvm/bin" >> $GITHUB_PATH

      - name: Install rust stable
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
        with:
          toolchain: stable
          override: true

      - name: Build
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1
        with:
          command: build

      - name: Test
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1
        with:
          command: test
          args: --features ci -- --nocapture
